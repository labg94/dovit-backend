# Docker Compose file Reference (https://docs.docker.com/compose/compose-file/)

version: "3.3"

# Define services
services:
  # Frontend Service
  dovit-frontend:
    build:
      context: ../dovit-frontend # Use an image built from the specified dockerfile
      dockerfile: Dockerfile
      args:
        REACT_APP_API_HOST: ${DOVIT_API_BASE_DOMAIN:-http://localhost:8080/api}
        REACT_APP_API_PORT: 8080
        REACT_APP_ROOT_PATH: http://comercialmao.cl
    ports:
      - "80:80"
    restart: always
    depends_on:
      - dovit-backend
    networks:
      - frontend
    volumes:
      - /etc/localtime:/etc/localtime:ro

  # App backend service
  dovit-backend:
    # Configuration for building the docker image for the backend service
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080" # Forward the exposed port 8080 on the container to port 8080 on the host machine
    restart: always
    depends_on:
      - db # This service depends on mysql. Start that first.
    environment: # Pass environment variables to the service
      DB_URL: jdbc:postgresql://db:5432/dovit
      DB_USERNAME: dovit
      DB_PASSWORD: w3E8D8CCqmuLmuQt
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - backend
      - frontend
    volumes:
      - /etc/localtime:/etc/localtime:ro

  # Database Service (Mysql)
  db:
    image: postgres
    ports:
      - "5432:5432"
    restart: always
    environment:
      POSTGRES_USER: dovit
      POSTGRES_PASSWORD: w3E8D8CCqmuLmuQt
      POSTGRES_DB: dovit
    volumes:
      - db-data:/var/lib/postgresql
    networks:
      - backend

# Volumes
volumes:
  db-data:

# Networks to be created to facilitate communication between containers
networks:
  backend:
  frontend:
